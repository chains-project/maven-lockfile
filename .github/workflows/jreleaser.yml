name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Next release version'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
env:
  working-directory: ./maven_plugin
jobs:

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          
      - name: install go
        uses: actions/setup-go@v4
      - name: install semversion
        run: go install github.com/ffurrer2/semver/cmd/semver@latest
      - name: Get current version from pom and remove snapshot if present.
        run: echo "CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')" >> $GITHUB_ENV
      - name: Set next version
        run: echo "NEXT_VERSION=$(semver next ${{ github.event.inputs.version }} $CURRENT_VERSION)" >> $GITHUB_ENV
      - name: Set release version
        run: mvn --no-transfer-progress --batch-mode versions:set -DnewVersion=$NEXT_VERSION
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.JRELEASER_GITHUB_TOKEN }}
          message: Releasing version ${{ env.NEXT_VERSION }}

      - name: Stage release
        run: mvn --no-transfer-progress --batch-mode -Ppublication clean deploy -DaltDeploymentRepository=local::default::file://`pwd`/target/staging-deploy
      - name: Print next version
        run: mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//'
      - name: Run JReleaser
        uses: jreleaser/release-action@v2
        with:
          setup-java: false
          version: 1.4.0
          arguments: full-release 
        env:
          JRELEASER_PROJECT_VERSION: ${{ env.NEXT_VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.JRELEASER_GITHUB_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME: ${{ secrets.JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD: ${{ secrets.JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD }}
      - name : Set next version (patch of release version) with -SNAPSHOT suffix
        run: echo "NEXT_VERSION=$(semver next patch $NEXT_VERSION)-SNAPSHOT" >> $GITHUB_ENV        
      - name: Set release version
        run: mvn --no-transfer-progress --batch-mode versions:set -DnewVersion=$NEXT_VERSION

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.JRELEASER_GITHUB_TOKEN }}
          message: Setting SNAPSHOT version ${{ github.event.inputs.nextVersion }}-SNAPSHOT

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
